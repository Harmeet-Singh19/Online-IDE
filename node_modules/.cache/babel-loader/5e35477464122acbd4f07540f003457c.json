{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { Theme, Paper, Button, FormControl, Select, MenuItem } from '@material-ui/core';\nimport HackerEarth from './ide';\n\nfunction App() {\n  // eslint-disable-next-line\n  const [lang, setLang] = useState([{\n    name: \"CPP\",\n    v: 1\n  }, {\n    name: \"PYTHON\",\n    v: 2\n  }], []);\n  const [curr, setCurr] = useState(0);\n  const [output, setOutput] = useState({\n    value: ''\n  });\n  const codeRef = React.createRef();\n  const stdinRef = useRef();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`);\n    const s = `${codeRef.current.value}`; //await setSource( `${codeRef.current.value}`)\n\n    await console.log(s); // await console.log(typeof(sourcecode))\n\n    const i = `${stdinRef.current.value}`;\n    const hackerEarth = new HackerEarth('89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n    '');\n    const config = {};\n    config.time_limit = 1;\n    config.memory_limit = 323244;\n    config.source = s;\n    config.input = i;\n    config.lang = `${lang[curr].name}`;\n    hackerEarth.run(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`);\n        console.log(err);\n      } else {\n        //console.log(config.source)\n        //console.log(res)\n        if (JSON.parse(res).compile_status !== \"OK\") {\n          setOutput({\n            value: \"Your code had an error: \" + JSON.parse(res).compile_status\n          });\n        }\n\n        console.log(JSON.parse(res));\n        setOutput({\n          value: JSON.parse(res).run_status.output\n        });\n      }\n    });\n  };\n\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`);\n    const s = `${codeRef.current.value}`; //await setSource( `${codeRef.current.value}`)\n\n    await console.log(s); // await console.log(typeof(sourcecode))\n\n    const i = `${stdinRef.current.value}`;\n    const hackerEarth = new HackerEarth('89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n    '');\n    const config = {};\n    config.time_limit = 1;\n    config.memory_limit = 323244;\n    config.source = s;\n    config.input = i;\n    config.lang = `${lang[curr].name}`;\n    hackerEarth.compile(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`);\n        console.log(err);\n      } else {\n        //console.log(config.source)\n        //console.log(res)\n        if (JSON.parse(res).compile_status !== \"OK\") {\n          setOutput({\n            value: \"Your code had an error: \" + JSON.parse(res).compile_status\n          });\n        } else {\n          setOutput({\n            value: JSON.parse(res).compile_status\n          });\n        }\n      }\n    });\n  };\n\n  const onLangChange = async event => {\n    const valueIndex = event.target.value;\n    setCurr(valueIndex);\n    console.log(valueIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["D:/WEBD/Projects(khud se)/IDE(task)/my-app/client/src/App.js"],"names":["React","useState","useEffect","useRef","Theme","Paper","Button","FormControl","Select","MenuItem","HackerEarth","App","lang","setLang","name","v","curr","setCurr","output","setOutput","value","codeRef","createRef","stdinRef","handleSubmit","e","preventDefault","console","log","current","s","i","hackerEarth","config","time_limit","memory_limit","source","input","run","err","res","JSON","parse","compile_status","run_status","handleSubmit2","compile","onLangChange","event","valueIndex","target","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport './App.css';\nimport { \n  Theme,\n  Paper,\n  Button,\n  FormControl,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport HackerEarth from './ide'\n\n\n\nfunction App() {\n  // eslint-disable-next-line\n  \n  const [lang, setLang] = useState([\n    {\n      name:\"CPP\",\n      v:1\n    },\n    {\n      name:\"PYTHON\",\n      v:2\n    }\n  ],[])\n\n  const [curr, setCurr] = useState(0)\n \n  const [output,setOutput]=useState({\n    value:''\n  })\n  const codeRef = React.createRef()\n  const stdinRef = useRef()\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.run(config, (err, res) => {\n        if (err) {\n          console.log(`${lang[curr].name}`)\n            console.log(err);\n        }\n        else{\n        //console.log(config.source)\n        //console.log(res)\n        if(JSON.parse(res).compile_status!==\"OK\"){\n          setOutput({\n            value:\"Your code had an error: \"+JSON.parse(res).compile_status\n          })\n        }\n        console.log(JSON.parse(res));\n        setOutput({\n          value:JSON.parse(res).run_status.output\n        })\n      }\n    });\n  \n  \n  };\n  const handleSubmit2 = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.compile(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`)\n          console.log(err);\n      }\n      else{\n      //console.log(config.source)\n      //console.log(res)\n      if(JSON.parse(res).compile_status!==\"OK\"){\n        setOutput({\n          value:\"Your code had an error: \"+JSON.parse(res).compile_status\n        })\n      }\n      else{\n        setOutput({\n          value:JSON.parse(res).compile_status\n        })\n      }\n      }\n    });\n  \n  \n  };\n\n  const onLangChange=async(event)=>{\n    const valueIndex= event.target.value\n     setCurr(valueIndex)\n    console.log(valueIndex)\n  }\n\n \n\n  return (\n    <ThemeProvider   theme={theme} ></ThemeProvider>\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nvar Bluebird = require('bluebird').getNewLibraryCopy(),\n    configure = require('request-promise-core/configure/request2'),\n    stealthyRequire = require('stealthy-require');\n\ntry {\n  // Load Request freshly - so that users can require an unaltered request instance!\n  var request = stealthyRequire(require.cache, function () {\n    return require('request');\n  }, function () {\n    require('tough-cookie');\n  }, module);\n} catch (err) {\n  /* istanbul ignore next */\n  var EOL = require('os').EOL;\n  /* istanbul ignore next */\n\n\n  console.error(EOL + '###' + EOL + '### The \"request\" library is not installed automatically anymore.' + EOL + '### But is a dependency of \"request-promise\".' + EOL + '### Please install it with:' + EOL + '### npm install request --save' + EOL + '###' + EOL);\n  /* istanbul ignore next */\n\n  throw err;\n}\n\nBluebird.config({\n  cancellation: true\n});\nconfigure({\n  request: request,\n  PromiseImpl: Bluebird,\n  expose: ['then', 'catch', 'finally', 'cancel', 'promise' // Would you like to expose more Bluebird methods? Try e.g. `rp(...).promise().tap(...)` first. `.promise()` returns the full-fledged Bluebird promise.\n  ],\n  constructorMixin: function (resolve, reject, onCancel) {\n    var self = this;\n    onCancel(function () {\n      self.abort();\n    });\n  }\n});\n\nrequest.bindCLS = function RP$bindCLS() {\n  throw new Error('CLS support was dropped. To get it back read: https://github.com/request/request-promise/wiki/Getting-Back-Support-for-Continuation-Local-Storage');\n};\n\nmodule.exports = request;","map":{"version":3,"sources":["D:/WEBD/Projects(khud se)/IDE(task)/my-app/client/node_modules/request-promise/lib/rp.js"],"names":["Bluebird","require","getNewLibraryCopy","configure","stealthyRequire","request","cache","module","err","EOL","console","error","config","cancellation","PromiseImpl","expose","constructorMixin","resolve","reject","onCancel","self","abort","bindCLS","RP$bindCLS","Error","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,iBAApB,EAAf;AAAA,IACIC,SAAS,GAAGF,OAAO,CAAC,yCAAD,CADvB;AAAA,IAEIG,eAAe,GAAGH,OAAO,CAAC,kBAAD,CAF7B;;AAIA,IAAI;AAEA;AACA,MAAII,OAAO,GAAGD,eAAe,CAACH,OAAO,CAACK,KAAT,EAAgB,YAAY;AACrD,WAAOL,OAAO,CAAC,SAAD,CAAd;AACH,GAF4B,EAG7B,YAAY;AACRA,IAAAA,OAAO,CAAC,cAAD,CAAP;AACH,GAL4B,EAK1BM,MAL0B,CAA7B;AAOH,CAVD,CAUE,OAAOC,GAAP,EAAY;AACV;AACA,MAAIC,GAAG,GAAGR,OAAO,CAAC,IAAD,CAAP,CAAcQ,GAAxB;AACA;;;AACAC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,GAAG,KAAN,GAAcA,GAAd,GAAoB,mEAApB,GAA0FA,GAA1F,GAAgG,+CAAhG,GAAkJA,GAAlJ,GAAwJ,6BAAxJ,GAAwLA,GAAxL,GAA8L,gCAA9L,GAAiOA,GAAjO,GAAuO,KAAvO,GAA+OA,GAA7P;AACA;;AACA,QAAMD,GAAN;AACH;;AAEDR,QAAQ,CAACY,MAAT,CAAgB;AAACC,EAAAA,YAAY,EAAE;AAAf,CAAhB;AAEAV,SAAS,CAAC;AACNE,EAAAA,OAAO,EAAEA,OADH;AAENS,EAAAA,WAAW,EAAEd,QAFP;AAGNe,EAAAA,MAAM,EAAE,CACJ,MADI,EAEJ,OAFI,EAGJ,SAHI,EAIJ,QAJI,EAKJ,SALI,CAMJ;AANI,GAHF;AAWNC,EAAAA,gBAAgB,EAAE,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqC;AACnD,QAAIC,IAAI,GAAG,IAAX;AACAD,IAAAA,QAAQ,CAAC,YAAY;AACjBC,MAAAA,IAAI,CAACC,KAAL;AACH,KAFO,CAAR;AAGH;AAhBK,CAAD,CAAT;;AAmBAhB,OAAO,CAACiB,OAAR,GAAkB,SAASC,UAAT,GAAsB;AACpC,QAAM,IAAIC,KAAJ,CAAU,mJAAV,CAAN;AACH,CAFD;;AAKAjB,MAAM,CAACkB,OAAP,GAAiBpB,OAAjB","sourcesContent":["'use strict';\n\nvar Bluebird = require('bluebird').getNewLibraryCopy(),\n    configure = require('request-promise-core/configure/request2'),\n    stealthyRequire = require('stealthy-require');\n\ntry {\n\n    // Load Request freshly - so that users can require an unaltered request instance!\n    var request = stealthyRequire(require.cache, function () {\n        return require('request');\n    },\n    function () {\n        require('tough-cookie');\n    }, module);\n\n} catch (err) {\n    /* istanbul ignore next */\n    var EOL = require('os').EOL;\n    /* istanbul ignore next */\n    console.error(EOL + '###' + EOL + '### The \"request\" library is not installed automatically anymore.' + EOL + '### But is a dependency of \"request-promise\".' + EOL + '### Please install it with:' + EOL + '### npm install request --save' + EOL + '###' + EOL);\n    /* istanbul ignore next */\n    throw err;\n}\n\nBluebird.config({cancellation: true});\n\nconfigure({\n    request: request,\n    PromiseImpl: Bluebird,\n    expose: [\n        'then',\n        'catch',\n        'finally',\n        'cancel',\n        'promise'\n        // Would you like to expose more Bluebird methods? Try e.g. `rp(...).promise().tap(...)` first. `.promise()` returns the full-fledged Bluebird promise.\n    ],\n    constructorMixin: function (resolve, reject, onCancel) {\n        var self = this;\n        onCancel(function () {\n            self.abort();\n        });\n    }\n});\n\nrequest.bindCLS = function RP$bindCLS() {\n    throw new Error('CLS support was dropped. To get it back read: https://github.com/request/request-promise/wiki/Getting-Back-Support-for-Continuation-Local-Storage');\n};\n\n\nmodule.exports = request;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { ThemeProvider, Paper, createMuiTheme, Button, FormControl, Select, MenuItem } from '@material-ui/core';\nimport HackerEarth from './ide';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nfunction App() {\n  // eslint-disable-next-line\n  const [darkMode, setDarkMode] = React.useState(getInitialMode());\n  React.useEffect(() => {\n    localStorage.setItem(\"light\", JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  function getInitialMode() {\n    const isReturningUser = (\"light\" in localStorage);\n    const savedMode = JSON.parse(localStorage.getItem(\"light\"));\n    const userPrefersDark = getPrefColorScheme(); // if mode was saved --> dark / light\n\n    if (isReturningUser) {\n      return savedMode; // if preferred color scheme is dark --> dark\n    } else if (userPrefersDark) {\n      return true; // otherwise --> light\n    } else {\n      return false;\n    } // return savedMode || false;\n\n  }\n\n  function getPrefColorScheme() {\n    if (!window.matchMedia) return;\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  }\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\"\n    }\n  });\n  const [lang, setLang] = useState([{\n    name: \"CPP\",\n    v: 1\n  }, {\n    name: \"PYTHON\",\n    v: 2\n  }, {\n    name: \"CSHARP\",\n    v: 3\n  }, {\n    name: \"JAVA\",\n    v: 4\n  }, {\n    name: \"JAVASCRIPT\",\n    v: 5\n  }, {\n    name: \"JAVASCRIPT_NODE\",\n    v: 6\n  }, {\n    name: \"PHP\",\n    v: 7\n  }, {\n    name: \"RUBY\",\n    v: 8\n  }], []);\n  const [curr, setCurr] = useState(0);\n  const [source, setSource] = useState({\n    value: ''\n  });\n  const [output, setOutput] = useState({\n    value: ''\n  });\n  const codeRef = React.createRef();\n  const stdinRef = useRef();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`);\n    setOutput({\n      value: \"Compiling and calculating result ...\"\n    });\n    const s = `${codeRef.current.value}`; //await setSource( `${codeRef.current.value}`)\n\n    await console.log(s); // await console.log(typeof(sourcecode))\n\n    const i = `${stdinRef.current.value}`;\n    const hackerEarth = new HackerEarth('89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n    '');\n    const config = {};\n    config.time_limit = 1;\n    config.memory_limit = 323244;\n    config.source = s;\n    config.input = i;\n    config.lang = `${lang[curr].name}`;\n    hackerEarth.run(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`);\n        console.log(err);\n      } else {\n        //console.log(config.source)\n        //console.log(res)\n        if (JSON.parse(res).compile_status !== \"OK\") {\n          setOutput({\n            value: \"Your code had an error: \" + JSON.parse(res).compile_status\n          });\n        }\n\n        console.log(JSON.parse(res));\n        setOutput({\n          value: JSON.parse(res).run_status.output\n        });\n      }\n    });\n  };\n\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`);\n    const s = `${codeRef.current.value}`; //await setSource( `${codeRef.current.value}`)\n\n    setOutput({\n      value: \"Compiling and checking for errors ...\"\n    });\n    await console.log(s); // await console.log(typeof(sourcecode))\n\n    const i = `${stdinRef.current.value}`;\n    const hackerEarth = new HackerEarth('89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n    '');\n    const config = {};\n    config.time_limit = 1;\n    config.memory_limit = 323244;\n    config.source = s;\n    config.input = i;\n    config.lang = `${lang[curr].name}`;\n    hackerEarth.compile(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`);\n        console.log(err);\n      } else {\n        //console.log(config.source)\n        //console.log(res)\n        if (JSON.parse(res).compile_status !== \"OK\") {\n          setOutput({\n            value: \"Your code had an error: \" + JSON.parse(res).compile_status\n          });\n        } else {\n          setOutput({\n            value: \"Your code compiled succesfully!!\"\n          });\n        }\n      }\n    });\n  };\n\n  const toClear = e => {\n    e.preventDefault();\n    const s = \"\";\n    codeRef.current.value = s;\n  };\n\n  const onLangChange = async event => {\n    const valueIndex = event.target.value;\n    setCurr(valueIndex);\n\n    if (valueIndex === 0) {\n      codeRef.current.value = `/******************************************************************************\n\n       Online C++ Compiler.\nCode, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\ncout<<\"Hello World\";\n\nreturn 0;\n}`;\n    } else if (valueIndex === 1) {\n      codeRef.current.value = `'''\n\n       Online Python Compiler.\nCode, Compile, Run and Debug python program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n'''\n\nprint(\"Hello World\")\n`;\n    } else if (valueIndex === 2) {}\n\n    console.log(valueIndex);\n  };\n\n  useEffect(() => {\n    codeRef.current.value = `/******************************************************************************\n\n  Online C++ Compiler.\nCode, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\ncout<<\"Hello World\";\n\nreturn 0;\n}`;\n  }, []);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: darkMode ? \"dark-mode\" : \"light-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 12\n    }\n  }, \"ONLINE IDE:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-containerr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: darkMode ? \"#52606D\" : \"yellow\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, \"\\u2600\\uFE0E\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"togglee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    checked: darkMode,\n    onChange: () => {\n      setDarkMode(prevMode => !prevMode);\n    },\n    id: \"checkbox\",\n    className: \"checkbox\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: darkMode ? \"#E8E6E1\" : \"#282a36\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, \"\\u263E\"))), /*#__PURE__*/React.createElement(Paper, {\n    className: \"app__paper\",\n    style: {\n      height: \"100%\",\n      backgroundColor: darkMode ? \"#212121\" : \"gainsboro\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, \"SELECT LANGUAGE: \"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"App__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"App__select\",\n    variant: \"outlined\",\n    value: curr,\n    style: {\n      backgroundColor: darkMode ? \"#857F72\" : \"white\",\n      color: darkMode ? \"yellow\" : \"black\"\n    },\n    onChange: onLangChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, lang[0].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, \" \", lang[1].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }, \" \", lang[2].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, \" \", lang[3].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, \" \", lang[4].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, \" \", lang[5].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, \" \", lang[6].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, \" \", lang[7].name)))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, \"Code Editor: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    ref: codeRef,\n    className: \"App__code\",\n    style: {\n      color: darkMode ? \"\" : \"#ffb86c\",\n      backgroundColor: darkMode ? \"#d8d8d8\" : \"#282a36\",\n      border: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    style: {\n      \"margin-right\": \"10px\"\n    },\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, \"Run\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    style: {\n      \"margin-right\": \"10px\"\n    },\n    onClick: handleSubmit2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 5\n    }\n  }, \"Compile\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    onClick: toClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 5\n    }\n  }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"App__smallH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, \"Input(stdin): \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    ref: stdinRef,\n    className: \"App__input\",\n    style: {\n      color: darkMode ? \"\" : \"#ffb86c\",\n      backgroundColor: darkMode ? \"#d8d8d8\" : \"#282a36\",\n      border: \" \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"App__smallH\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 5\n    }\n  }, \"Output(stdout): \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    disabled: true,\n    value: output.value,\n    className: \"App__output\",\n    style: {\n      color: darkMode ? \"\" : \"#ffb86c\",\n      backgroundColor: darkMode ? \"#d8d8d8\" : \"#282a36\",\n      border: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 5\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/WEBD/Projects(khud se)/IDE(task)/my-app/client/src/App.js"],"names":["React","useState","useEffect","useRef","ThemeProvider","Paper","createMuiTheme","Button","FormControl","Select","MenuItem","HackerEarth","UnControlled","CodeMirror","App","darkMode","setDarkMode","getInitialMode","localStorage","setItem","JSON","stringify","isReturningUser","savedMode","parse","getItem","userPrefersDark","getPrefColorScheme","window","matchMedia","matches","theme","palette","type","lang","setLang","name","v","curr","setCurr","source","setSource","value","output","setOutput","codeRef","createRef","stdinRef","handleSubmit","e","preventDefault","console","log","current","s","i","hackerEarth","config","time_limit","memory_limit","input","run","err","res","compile_status","run_status","handleSubmit2","compile","toClear","onLangChange","event","valueIndex","target","color","prevMode","height","backgroundColor","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport './App.css';\nimport { \n  ThemeProvider,\n  Paper,\n  createMuiTheme,\n  Button,\n  FormControl,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport HackerEarth from './ide'\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\n\n\nfunction App() {\n  // eslint-disable-next-line\n  const [darkMode, setDarkMode] = React.useState(getInitialMode());\n  React.useEffect(() => {\n    localStorage.setItem(\"light\", JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  function getInitialMode() {\n    const isReturningUser = \"light\" in localStorage;\n    const savedMode = JSON.parse(localStorage.getItem(\"light\"));\n    const userPrefersDark = getPrefColorScheme();\n    // if mode was saved --> dark / light\n    if (isReturningUser) {\n      return savedMode;\n      // if preferred color scheme is dark --> dark\n    } else if (userPrefersDark) {\n      return true;\n      // otherwise --> light\n    } else {\n      return false;\n    } \n    // return savedMode || false;\n  }\n\n  function getPrefColorScheme() {\n    if (!window.matchMedia) return;\n\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  }\n  const theme= createMuiTheme({\n    palette:{\n      type: darkMode ? \"dark\" : \"light\"\n      ,\n    },\n  });\n  const [lang, setLang] = useState([\n    {\n      name:\"CPP\",\n      v:1\n    },\n    {\n      name:\"PYTHON\",\n      v:2\n    },\n    {\n      name:\"CSHARP\",\n      v:3\n    },\n    {\n      name:\"JAVA\",\n      v:4\n    },\n    {\n      name:\"JAVASCRIPT\",\n      v:5\n    },\n    {\n      name:\"JAVASCRIPT_NODE\",\n      v:6\n    },\n    {\n      name:\"PHP\",\n      v:7\n    },\n    {\n      name:\"RUBY\",\n      v:8\n    }\n  ],[])\n\n  const [curr, setCurr] = useState(0)\n  const [source,setSource]=useState({\n    value:''\n  })\n  const [output,setOutput]=useState({\n    value:''\n  })\n  const codeRef = React.createRef()\n  const stdinRef = useRef()\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    setOutput({\n      value:\"Compiling and calculating result ...\"\n    })\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.run(config, (err, res) => {\n        if (err) {\n          console.log(`${lang[curr].name}`)\n            console.log(err);\n        }\n        else{\n        //console.log(config.source)\n        //console.log(res)\n        if(JSON.parse(res).compile_status!==\"OK\"){\n          setOutput({\n            value:\"Your code had an error: \"+JSON.parse(res).compile_status\n          })\n        }\n        console.log(JSON.parse(res));\n        setOutput({\n          value:JSON.parse(res).run_status.output\n        })\n      }\n    });\n  \n  \n  };\n  const handleSubmit2 = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    setOutput({\n      value:\"Compiling and checking for errors ...\"\n    })\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.compile(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`)\n          console.log(err);\n      }\n      else{\n      //console.log(config.source)\n      //console.log(res)\n      if(JSON.parse(res).compile_status!==\"OK\"){\n        setOutput({\n          value:\"Your code had an error: \"+JSON.parse(res).compile_status\n        })\n      }\n      else{\n        setOutput({\n          value:\"Your code compiled succesfully!!\"\n        })\n      }\n      }\n    });\n  };\n\n  const toClear=(e)=>{\n    e.preventDefault();\n    const s=\"\"\n    codeRef.current.value=s\n  }\n\n  const onLangChange=async(event)=>{\n    const valueIndex= event.target.value\n     setCurr(valueIndex)\n     if(valueIndex===0){\n       codeRef.current.value=`/******************************************************************************\n\n       Online C++ Compiler.\nCode, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\ncout<<\"Hello World\";\n\nreturn 0;\n}`\n\n     }\n     else if(valueIndex===1){\n       codeRef.current.value=`'''\n\n       Online Python Compiler.\nCode, Compile, Run and Debug python program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n'''\n\nprint(\"Hello World\")\n`\n     }\n     else if(valueIndex===2){\n       \n\n     }\n    console.log(valueIndex)\n  }\n\n useEffect(()=>{\n  codeRef.current.value=`/******************************************************************************\n\n  Online C++ Compiler.\nCode, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\ncout<<\"Hello World\";\n\nreturn 0;\n}`\n },[])\n\n  return (\n    <ThemeProvider   theme={theme} > \n       <nav className={darkMode? \"dark-mode\":\"light-mode\"}>\n       \n           <h1>ONLINE IDE:</h1>\n        \n      <div className=\"toggle-containerr\">\n    \n          <span style={{ color: darkMode ? \"#52606D\" : \"yellow\" }}>☀︎</span>\n          <span className=\"togglee\">\n            <input\n              checked={darkMode}\n              onChange={() => {setDarkMode(prevMode => !prevMode) }}\n              id=\"checkbox\"\n              className=\"checkbox\"\n              type=\"checkbox\"\n            />\n            <label htmlFor=\"checkbox\" />\n          </span>\n          <span style={{ color: darkMode ? \"#E8E6E1\" : \"#282a36\" }}>☾</span>\n        </div>\n        </nav>\n     <Paper  className= \"app__paper\" style={{height:\"100%\", backgroundColor:darkMode? \"#212121\" : \"gainsboro\"}}>\n    <div className=\"App\">\n    <div className=\"App__left\">\n      <div className=\"App__header\">\n      <h1>SELECT LANGUAGE: </h1>\n    <FormControl className=\"App__dropdown\">\n      <Select\n      className=\"App__select\"\n      variant=\"outlined\"\n      value={curr}\n      style={{backgroundColor:darkMode? \"#857F72\": \"white\", color:darkMode? \"yellow\":\"black\"}}\n      onChange={onLangChange}\n      >\n        <MenuItem style={{}} value={0}>{lang[0].name}</MenuItem>\n        <MenuItem style={{}} value={1}> {lang[1].name}</MenuItem>\n        <MenuItem style={{}} value={2}> {lang[2].name}</MenuItem>\n        <MenuItem style={{}} value={3}> {lang[3].name}</MenuItem>\n        <MenuItem style={{}} value={4}> {lang[4].name}</MenuItem>\n        <MenuItem style={{}} value={5}> {lang[5].name}</MenuItem>\n        <MenuItem style={{}} value={6}> {lang[6].name}</MenuItem>\n        <MenuItem style={{}} value={7}> {lang[7].name}</MenuItem>\n        \n\n      </Select>\n  </FormControl>\n      </div>\n      <h3>Code Editor: </h3>\n  <textarea type=\"text\" ref={codeRef} className=\"App__code\" style={{color:darkMode ? \"\":\"#ffb86c\",backgroundColor:darkMode?\"#d8d8d8\":\"#282a36\",border:\"\"}}></textarea>\n  \n  <div className=\"App__buttons\">\n          <Button variant=\"contained\" size=\"large\" color=\"primary\"  style={{\"margin-right\": \"10px\"}} onClick={handleSubmit}>Run</Button>\n    <Button variant=\"contained\" size=\"large\" color=\"secondary\" style={{\"margin-right\": \"10px\"}} onClick={handleSubmit2}>Compile</Button>\n    <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={toClear}>Clear</Button>\n    </div>\n    </div>\n    <div className=\"App__right\">\n      <h3 className=\"App__smallH\">Input(stdin): </h3>\n    <textarea type=\"text\" ref={stdinRef} className=\"App__input\" style={{color:darkMode ? \"\":\"#ffb86c\",backgroundColor:darkMode?\"#d8d8d8\":\"#282a36\",border:\" \"}} />\n    <h3 className=\"App__smallH\">Output(stdout): </h3>\n    <textarea disabled value={output.value} className=\"App__output\" style={{color:darkMode ? \"\":\"#ffb86c\",backgroundColor:darkMode?\"#d8d8d8\":\"#282a36\",border:\"\"}} ></textarea>\n    </div>\n   \n  </div>\n  </Paper>\n  </ThemeProvider>\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
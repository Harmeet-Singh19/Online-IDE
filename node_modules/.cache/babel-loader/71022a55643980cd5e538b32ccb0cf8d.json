{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { ThemeProvider, Paper, createMuiTheme, Button, FormControl, Select, MenuItem } from '@material-ui/core';\nimport HackerEarth from './ide';\n\nfunction App() {\n  // eslint-disable-next-line\n  const [darkMode, setDarkMode] = React.useState(getInitialMode());\n  React.useEffect(() => {\n    localStorage.setItem(\"light\", JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  function getInitialMode() {\n    const isReturningUser = (\"light\" in localStorage);\n    const savedMode = JSON.parse(localStorage.getItem(\"light\"));\n    const userPrefersDark = getPrefColorScheme(); // if mode was saved --> dark / light\n\n    if (isReturningUser) {\n      return savedMode; // if preferred color scheme is dark --> dark\n    } else if (userPrefersDark) {\n      return true; // otherwise --> light\n    } else {\n      return false;\n    } // return savedMode || false;\n\n  }\n\n  function getPrefColorScheme() {\n    if (!window.matchMedia) return;\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  }\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\"\n    }\n  });\n  const [lang, setLang] = useState([{\n    name: \"CPP\",\n    v: 1\n  }, {\n    name: \"PYTHON\",\n    v: 2\n  }], []);\n  const [curr, setCurr] = useState(0);\n  const [output, setOutput] = useState({\n    value: ''\n  });\n  const codeRef = React.createRef();\n  const stdinRef = useRef();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`);\n    const s = `${codeRef.current.value}`; //await setSource( `${codeRef.current.value}`)\n\n    await console.log(s); // await console.log(typeof(sourcecode))\n\n    const i = `${stdinRef.current.value}`;\n    const hackerEarth = new HackerEarth('89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n    '');\n    const config = {};\n    config.time_limit = 1;\n    config.memory_limit = 323244;\n    config.source = s;\n    config.input = i;\n    config.lang = `${lang[curr].name}`;\n    hackerEarth.run(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`);\n        console.log(err);\n      } else {\n        //console.log(config.source)\n        //console.log(res)\n        if (JSON.parse(res).compile_status !== \"OK\") {\n          setOutput({\n            value: \"Your code had an error: \" + JSON.parse(res).compile_status\n          });\n        }\n\n        console.log(JSON.parse(res));\n        setOutput({\n          value: JSON.parse(res).run_status.output\n        });\n      }\n    });\n  };\n\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`);\n    const s = `${codeRef.current.value}`; //await setSource( `${codeRef.current.value}`)\n\n    await console.log(s); // await console.log(typeof(sourcecode))\n\n    const i = `${stdinRef.current.value}`;\n    const hackerEarth = new HackerEarth('89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n    '');\n    const config = {};\n    config.time_limit = 1;\n    config.memory_limit = 323244;\n    config.source = s;\n    config.input = i;\n    config.lang = `${lang[curr].name}`;\n    hackerEarth.compile(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`);\n        console.log(err);\n      } else {\n        //console.log(config.source)\n        //console.log(res)\n        if (JSON.parse(res).compile_status !== \"OK\") {\n          setOutput({\n            value: \"Your code had an error: \" + JSON.parse(res).compile_status\n          });\n        } else {\n          setOutput({\n            value: JSON.parse(res).compile_status\n          });\n        }\n      }\n    });\n  };\n\n  const onLangChange = async event => {\n    const valueIndex = event.target.value;\n    setCurr(valueIndex);\n    console.log(valueIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: darkMode ? \"dark-mode\" : \"light-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-containerr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: darkMode ? \"#52606D\" : \"yellow\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"\\u2600\\uFE0E\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"togglee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    checked: darkMode,\n    onChange: () => {\n      setDarkMode(prevMode => !prevMode);\n    },\n    id: \"checkbox\",\n    className: \"checkbox\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: darkMode ? \"#E8E6E1\" : \"#616e7c\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, \"\\u263E\"))), /*#__PURE__*/React.createElement(Paper, {\n    className: \"app__paper\",\n    style: {\n      height: \"100%\",\n      backgroundColor: darkMode ? \"#212121\" : \"gainsboro\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, \"Select Language: \"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"App__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"App__select\",\n    variant: \"outlined\",\n    value: curr,\n    style: {\n      backgroundColor: darkMode ? \"#857F72\" : \"white\",\n      color: darkMode ? \"yellow\" : \"black\"\n    },\n    onChange: onLangChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, lang[0].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, \" \", lang[1].name)))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, \"Code Editor: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    ref: codeRef,\n    className: \"App__code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App_buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      \"margin-right\": \"10px\"\n    },\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, \"Run\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      \"margin-right\": \"10px\"\n    },\n    onClick: handleSubmit2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }\n  }, \"Compile\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    ref: stdinRef,\n    className: \"App__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: output.value,\n    className: \"App__output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/WEBD/Projects(khud se)/IDE(task)/my-app/client/src/App.js"],"names":["React","useState","useEffect","useRef","ThemeProvider","Paper","createMuiTheme","Button","FormControl","Select","MenuItem","HackerEarth","App","darkMode","setDarkMode","getInitialMode","localStorage","setItem","JSON","stringify","isReturningUser","savedMode","parse","getItem","userPrefersDark","getPrefColorScheme","window","matchMedia","matches","theme","palette","type","lang","setLang","name","v","curr","setCurr","output","setOutput","value","codeRef","createRef","stdinRef","handleSubmit","e","preventDefault","console","log","current","s","i","hackerEarth","config","time_limit","memory_limit","source","input","run","err","res","compile_status","run_status","handleSubmit2","compile","onLangChange","event","valueIndex","target","color","prevMode","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport './App.css';\nimport { \n  ThemeProvider,\n  Paper,\n  createMuiTheme,\n  Button,\n  FormControl,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport HackerEarth from './ide'\n\n\n\nfunction App() {\n  // eslint-disable-next-line\n  const [darkMode, setDarkMode] = React.useState(getInitialMode());\n  React.useEffect(() => {\n    localStorage.setItem(\"light\", JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  function getInitialMode() {\n    const isReturningUser = \"light\" in localStorage;\n    const savedMode = JSON.parse(localStorage.getItem(\"light\"));\n    const userPrefersDark = getPrefColorScheme();\n    // if mode was saved --> dark / light\n    if (isReturningUser) {\n      return savedMode;\n      // if preferred color scheme is dark --> dark\n    } else if (userPrefersDark) {\n      return true;\n      // otherwise --> light\n    } else {\n      return false;\n    } \n    // return savedMode || false;\n  }\n\n  function getPrefColorScheme() {\n    if (!window.matchMedia) return;\n\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  }\n  const theme= createMuiTheme({\n    palette:{\n      type: darkMode ? \"dark\" : \"light\"\n      ,\n    },\n  });\n  const [lang, setLang] = useState([\n    {\n      name:\"CPP\",\n      v:1\n    },\n    {\n      name:\"PYTHON\",\n      v:2\n    }\n  ],[])\n\n  const [curr, setCurr] = useState(0)\n \n  const [output,setOutput]=useState({\n    value:''\n  })\n  const codeRef = React.createRef()\n  const stdinRef = useRef()\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.run(config, (err, res) => {\n        if (err) {\n          console.log(`${lang[curr].name}`)\n            console.log(err);\n        }\n        else{\n        //console.log(config.source)\n        //console.log(res)\n        if(JSON.parse(res).compile_status!==\"OK\"){\n          setOutput({\n            value:\"Your code had an error: \"+JSON.parse(res).compile_status\n          })\n        }\n        console.log(JSON.parse(res));\n        setOutput({\n          value:JSON.parse(res).run_status.output\n        })\n      }\n    });\n  \n  \n  };\n  const handleSubmit2 = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.compile(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`)\n          console.log(err);\n      }\n      else{\n      //console.log(config.source)\n      //console.log(res)\n      if(JSON.parse(res).compile_status!==\"OK\"){\n        setOutput({\n          value:\"Your code had an error: \"+JSON.parse(res).compile_status\n        })\n      }\n      else{\n        setOutput({\n          value:JSON.parse(res).compile_status\n        })\n      }\n      }\n    });\n  \n  \n  };\n\n  const onLangChange=async(event)=>{\n    const valueIndex= event.target.value\n     setCurr(valueIndex)\n    console.log(valueIndex)\n  }\n\n \n\n  return (\n    <ThemeProvider   theme={theme} > \n       <nav className={darkMode? \"dark-mode\":\"light-mode\"}>\n         \n      <div className=\"toggle-containerr\">\n          <span style={{ color: darkMode ? \"#52606D\" : \"yellow\" }}>☀︎</span>\n          <span className=\"togglee\">\n            <input\n              checked={darkMode}\n              onChange={() => {setDarkMode(prevMode => !prevMode) }}\n              id=\"checkbox\"\n              className=\"checkbox\"\n              type=\"checkbox\"\n            />\n            <label htmlFor=\"checkbox\" />\n          </span>\n          <span style={{ color: darkMode ? \"#E8E6E1\" : \"#616e7c\" }}>☾</span>\n        </div>\n        </nav>\n     <Paper  className= \"app__paper\" style={{height:\"100%\", backgroundColor:darkMode? \"#212121\" : \"gainsboro\"}}>\n    <div className=\"App\">\n    <div className=\"App__left\">\n      <div className=\"App__header\">\n      <h1>Select Language: </h1>\n    <FormControl className=\"App__dropdown\">\n      <Select\n      className=\"App__select\"\n      variant=\"outlined\"\n      value={curr}\n      style={{backgroundColor:darkMode? \"#857F72\": \"white\", color:darkMode? \"yellow\":\"black\"}}\n      onChange={onLangChange}\n      >\n        <MenuItem style={{}} value={0}>{lang[0].name}</MenuItem>\n        <MenuItem style={{}} value={1}> {lang[1].name}</MenuItem>\n\n      </Select>\n  </FormControl>\n      </div>\n      <h3>Code Editor: </h3>\n    <textarea type=\"text\" ref={codeRef} className=\"App__code\"></textarea>\n    <div className=\"App_buttons\">\n    <Button variant=\"contained\" color=\"primary\"  style={{\"margin-right\": \"10px\"}} onClick={handleSubmit}>Run</Button>\n    <Button variant=\"contained\" color=\"secondary\" style={{\"margin-right\": \"10px\"}} onClick={handleSubmit2}>Compile</Button>\n    <Button variant=\"contained\" color=\"primary\">Clear</Button>\n    </div>\n    </div>\n    <div className=\"App__right\">\n    <textarea type=\"text\" ref={stdinRef} className=\"App__input\" />\n    <textarea value={output.value} className=\"App__output\" ></textarea>\n    </div>\n   \n  </div>\n  </Paper>\n  </ThemeProvider>\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import io from\"socket.io-client\";import{Accordion,Button,Card}from'react-bootstrap';var socket=io.connect(\"http://localhost:5000/editor\");var Chat=/*#__PURE__*/function(_Component){_inherits(Chat,_Component);var _super=_createSuper(Chat);function Chat(props){var _this;_classCallCheck(this,Chat);_this=_super.call(this,props);_this.onTextChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.onMessageSubmit=function(){var _this$state=_this.state,nickname=_this$state.nickname,msg=_this$state.msg;socket.emit(\"chat message\",{nickname:nickname,msg:msg});_this.setState({msg:\"\"});};_this.state={msg:\"\",chat:_toConsumableArray(_this.props.name),nickname:_this.props.name};return _this;}_createClass(Chat,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;socket.on(\"chat message\",function(_ref){var nickname=_ref.nickname,msg=_ref.msg;_this2.setState({chat:[].concat(_toConsumableArray(_this2.state.chat),[{nickname:nickname,msg:msg}])});});}},{key:\"renderChat\",value:function renderChat(){var chat=this.state.chat;return chat.map(function(_ref2,idx){var nickname=_ref2.nickname,msg=_ref2.msg;return/*#__PURE__*/React.createElement(\"div\",{key:idx},/*#__PURE__*/React.createElement(\"span\",{style:{color:\"green\"}},nickname,\": \"),/*#__PURE__*/React.createElement(\"span\",null,msg));});}},{key:\"openNav\",value:function openNav(){document.getElementById(\"mySidepanel\").style.width=\"250px\";}/* Set the width of the sidebar to 0 (hide it) */},{key:\"closeNav\",value:function closeNav(){document.getElementById(\"mySidepanel\").style.width=\"0\";}},{key:\"render\",value:function render(){var _this3=this;/* Set the width of the sidebar to 250px (show it) */return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{id:\"mySidepanel\",class:\"sidepanel\"},/*#__PURE__*/React.createElement(\"span\",null,\"Nickname\"),/*#__PURE__*/React.createElement(\"input\",{name:\"nickname\",onChange:function onChange(e){return _this3.onTextChange(e);},value:this.state.nickname}),/*#__PURE__*/React.createElement(\"span\",null,\"Message\"),/*#__PURE__*/React.createElement(\"input\",{name:\"msg\",onChange:function onChange(e){return _this3.onTextChange(e);},value:this.state.msg}),/*#__PURE__*/React.createElement(\"button\",{onClick:this.onMessageSubmit},\"Send\"),/*#__PURE__*/React.createElement(\"div\",null,this.renderChat())),/*#__PURE__*/React.createElement(\"button\",{class:\"openbtn\",onclick:function onclick(){document.getElementById(\"mySidepanel\").style.width=\"250px\";}},\"\\u2630 Toggle Sidepanel\"));}}]);return Chat;}(Component);export default Chat;","map":{"version":3,"sources":["D:/WEBD/Projects(khud se)/IDE(task)/my-app/client/src/components/Chat/Chat.js"],"names":["React","Component","io","Accordion","Button","Card","socket","connect","Chat","props","onTextChange","e","setState","target","name","value","onMessageSubmit","state","nickname","msg","emit","chat","on","map","idx","color","document","getElementById","style","width","renderChat"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { Accordion, Button, Card } from 'react-bootstrap';\n\nconst socket = io.connect(\"http://localhost:5000/editor\");\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { msg: \"\", chat: [...this.props.name], nickname: this.props.name };\n  }\n\n  componentDidMount() {\n    socket.on(\"chat message\", ({ nickname, msg }) => {\n      this.setState({\n        chat: [...this.state.chat, { nickname, msg }]\n      });\n    });\n  }\n\n  onTextChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onMessageSubmit = () => {\n    const { nickname, msg } = this.state;\n    socket.emit(\"chat message\", { nickname, msg });\n    this.setState({ msg: \"\" });\n  };\n\n  renderChat() {\n    const { chat } = this.state;\n    return chat.map(({ nickname, msg }, idx) => (\n      <div key={idx}>\n        <span style={{ color: \"green\" }}>{nickname}: </span>\n\n        <span>{msg}</span>\n      </div>\n    ));\n  }\n  openNav() {\n    document.getElementById(\"mySidepanel\").style.width = \"250px\";\n  }\n  \n  /* Set the width of the sidebar to 0 (hide it) */\n  closeNav() {\n    document.getElementById(\"mySidepanel\").style.width = \"0\";\n  }\n  render() {\n    /* Set the width of the sidebar to 250px (show it) */\n\n    return (\n      <div>\n      <div id=\"mySidepanel\" class=\"sidepanel\">\n            <span>Nickname</span>\n            <input\n              name=\"nickname\"\n              onChange={e => this.onTextChange(e)}\n              value={this.state.nickname}\n            />\n            <span>Message</span>\n            <input\n              name=\"msg\"\n              onChange={e => this.onTextChange(e)}\n              value={this.state.msg}\n            />\n            <button onClick={this.onMessageSubmit}>Send</button>\n            <div>{this.renderChat()}</div>\n      </div><button class=\"openbtn\" onclick={()=>{document.getElementById(\"mySidepanel\").style.width = \"250px\"}}>&#9776; Toggle Sidepanel</button>\n      </div>\n    );\n  }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}
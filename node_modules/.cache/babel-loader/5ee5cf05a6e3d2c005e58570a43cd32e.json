{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEBD\\\\Projects(khud se)\\\\IDE(task)\\\\my-app\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { TextareaAutosize, TextField, Button, FormControl, Select, MenuItem } from '@material-ui/core';\nimport HackerEarth from './ide';\n\nfunction App() {\n  // eslint-disable-next-line\n  const [lang, setLang] = useState([{\n    name: \"CPP\",\n    v: 1\n  }, {\n    name: \"PYTHON\",\n    v: 2\n  }], []);\n  const [curr, setCurr] = useState(0);\n  const [sourcecode, setSource] = useState(``);\n  const [input, setInput] = useState(``);\n  const [output, setOutput] = useState({\n    value: ''\n  });\n  const codeRef = React.createRef();\n  const stdinRef = useRef();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`);\n    const s = `${codeRef.current.value}`; //await setSource( `${codeRef.current.value}`)\n\n    await console.log(s); // await console.log(typeof(sourcecode))\n\n    const i = `${stdinRef.current.value}`;\n    const hackerEarth = new HackerEarth('89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n    '');\n    console.log(s == `#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    cout<<\"Hello World\";\n\n    return 0;\n}\n`);\n    const config = {};\n    config.time_limit = 1;\n    config.memory_limit = 323244;\n    config.source = s;\n    config.input = i;\n    config.lang = `${lang[curr].name}`;\n    hackerEarth.run(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`);\n        console.log(err);\n      }\n\n      console.log(config.source);\n      console.log(res);\n      console.log(JSON.parse(res));\n      setOutput({\n        value: JSON.parse(res).run_status.output\n      });\n    });\n  };\n\n  const onLangChange = async event => {\n    const valueIndex = event.target.value;\n    setCurr(valueIndex);\n    console.log(valueIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"App__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"App__select\",\n    variant: \"outlined\",\n    value: curr,\n    style: {\n      backgroundColor: \"yellow\",\n      color: \"black\"\n    },\n    onChange: onLangChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, lang[0].name), /*#__PURE__*/React.createElement(MenuItem, {\n    style: {},\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \" \", lang[1].name))), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    ref: codeRef,\n    className: \"App__code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App_buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Run\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Compile\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    ref: stdinRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextareaAutosize, {\n    value: output.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/WEBD/Projects(khud se)/IDE(task)/my-app/client/src/App.js"],"names":["React","useState","useEffect","useRef","TextareaAutosize","TextField","Button","FormControl","Select","MenuItem","HackerEarth","App","lang","setLang","name","v","curr","setCurr","sourcecode","setSource","input","setInput","output","setOutput","value","codeRef","createRef","stdinRef","handleSubmit","e","preventDefault","console","log","current","s","i","hackerEarth","config","time_limit","memory_limit","source","run","err","res","JSON","parse","run_status","onLangChange","event","valueIndex","target","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\nimport './App.css';\nimport { \n  TextareaAutosize,\n  TextField,\n  Button,\n  FormControl,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport HackerEarth from './ide'\n\n\n\nfunction App() {\n  // eslint-disable-next-line\n  \n  const [lang, setLang] = useState([\n    {\n      name:\"CPP\",\n      v:1\n    },\n    {\n      name:\"PYTHON\",\n      v:2\n    }\n  ],[])\n\n  const [curr, setCurr] = useState(0)\n  const [sourcecode,setSource]=useState(``)\n  const [input,setInput]=useState(``)\n  const [output,setOutput]=useState({\n    value:''\n  })\n  const codeRef = React.createRef()\n  const stdinRef = useRef()\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \nconsole.log(s==`#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    cout<<\"Hello World\";\n\n    return 0;\n}\n`)\n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.run(config, (err, res) => {\n        if (err) {\n          console.log(`${lang[curr].name}`)\n            console.log(err);\n        }\n        console.log(config.source)\n        console.log(res)\n        console.log(JSON.parse(res));\n        setOutput({\n          value:JSON.parse(res).run_status.output\n        })\n    });\n  \n  \n  };\n    \n\n  const onLangChange=async(event)=>{\n    const valueIndex= event.target.value\n     setCurr(valueIndex)\n    console.log(valueIndex)\n  }\n\n \n\n  return (\n    <div className=\"App\">\n      <div className=\"App__left\">\n      <FormControl className=\"App__dropdown\">\n        <Select\n        className=\"App__select\"\n        variant=\"outlined\"\n        value={curr}\n        style={{backgroundColor:\"yellow\", color:\"black\"}}\n        onChange={onLangChange}\n        >\n          <MenuItem style={{}} value={0}>{lang[0].name}</MenuItem>\n          <MenuItem style={{}} value={1}> {lang[1].name}</MenuItem>\n\n        </Select>\n    </FormControl>\n      \n      <textarea type=\"text\" ref={codeRef} className=\"App__code\"></textarea>\n      <div className=\"App_buttons\">\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Run</Button>\n      <Button variant=\"contained\" color=\"secondary\">Compile</Button>\n      <Button variant=\"contained\" color=\"primary\">Clear</Button>\n      </div>\n      </div>\n      <div className=\"App__right\">\n      <textarea type=\"text\" ref={stdinRef}  />\n      <TextareaAutosize value={output.value}></TextareaAutosize>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
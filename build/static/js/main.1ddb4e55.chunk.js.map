{"version":3,"sources":["back.jpg","backl.jpg","fonts/Randomly Cute.otf","ide.js","App.js","serviceWorker.js","index.js","fonts/ARIAL.TTF"],"names":["module","exports","rp","require","debug","HackerEarth","clientSecret","mode","_runURL","_compileURL","_clientSecret","_mode","config","callback","data","this","JSON","stringify","rpData","compileURL","runURL","language","time_limit","memory_limit","source","input","client_secret","async","lang","url","method","uri","form","gzip","headers","Promise","resolve","reject","then","body","res","catch","err","App","React","useState","isReturningUser","localStorage","savedMode","parse","getItem","userPrefersDark","window","matchMedia","matches","getPrefColorScheme","getInitialMode","darkMode","setDarkMode","useEffect","setItem","theme","createMuiTheme","palette","type","name","v","curr","setCurr","value","output","setOutput","codeRef","createRef","stdinRef","useRef","handleSubmit","e","a","preventDefault","console","log","current","s","i","hackerEarth","run","compile_status","run_status","handleSubmit2","compile","onLangChange","event","valueIndex","target","ThemeProvider","className","style","color","checked","onChange","prevMode","id","htmlFor","Paper","height","backgroundColor","backgroundImage","back","backl","transitionDelay","backgroundSize","FormControl","Select","variant","MenuItem","ref","border","Button","size","startIcon","onClick","fontFamily","arial","disableFocusRipple","disabled","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1ddb4e55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.52d23a7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backl.4fcb3eaa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Randomly Cute.32c5f057.otf\";","'use strict';\r\nconst rp = require('request-promise');\r\nconst debug = require('debug')('HE');\r\n\r\nclass helpers {\r\n    constructor() {\r\n\r\n    }\r\n    getQueryData({language,time_limit,memory_limit,source,input,lang},clientSecret,mode) {\r\n        const obj ={\r\n            client_secret:clientSecret,\r\n            async:mode,\r\n            source:source,\r\n            lang:lang,\r\n            input:input,\r\n            time_limit:time_limit||1,\r\n            memory_limit:memory_limit||262144\r\n        };\r\n        return obj;\r\n    }\r\n   \r\n    getRequestPostJSON(data,url) {\r\n        return {\r\n            method: 'POST',\r\n            uri: 'https://cors-anywhere.herokuapp.com/'+ url,\r\n            form: data,\r\n            gzip: true,\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data',\r\n                'X-Requested-With':'XMLHttpRequest',\r\n                'Access-Control-Allow-Origin':'http://localhost:3000',\r\n                'Access-Control-Allow-Methods':'GET, PUT, POST, DELETE, OPTIONS',\r\n                'Access-Control-Allow-Headers':'Accept, Content-Type, Origin'\r\n              },\r\n        };\r\n    }\r\n\r\n    doOperation(rpData,callback) {\r\n        return new Promise((resolve, reject) => {\r\n             rp(rpData)\r\n                    .then((body) => {\r\n                        return body;\r\n                    })\r\n                    .then((res) => {\r\n                        if(callback) {\r\n                            callback(null,res);\r\n                        }\r\n                        resolve(res);\r\n                    })\r\n                    .catch((err) => {\r\n                        if(callback) {\r\n                            callback(err,null);\r\n                        }\r\n                        reject(err);\r\n                    });\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default class HackerEarth extends helpers {\r\n    constructor(clientSecret, mode) {\r\n        super();  \r\n        this._runURL = 'https://api.hackerearth.com/v3/code/run/';\r\n        this._compileURL = 'https://api.hackerearth.com/v3/code/compile/';\r\n        this._clientSecret = clientSecret;\r\n        this._mode = mode || 0;\r\n        debug('Bootstraping HackerEarth module with clientSecret as %s and mode as %s', clientSecret,mode);\r\n    }\r\n\r\n    get runURL() {\r\n        return this._runURL;\r\n    }\r\n\r\n    get compileURL() {\r\n        return this._compileURL;    \r\n    }\r\n\r\n    get clientSecret() {\r\n        return this._clientSecret;\r\n    }\r\n\r\n    get mode() {\r\n        return this._mode;\r\n    }\r\n    compile(config, callback) {\r\n        let data = super.getQueryData(config,this.clientSecret,this.mode);\r\n        debug('In HackerEarth:Compile Data sent to API is %s',JSON.stringify(data));\r\n        let rpData = super.getRequestPostJSON(data,this.compileURL);\r\n        return super.doOperation(rpData,callback);    \r\n    }\r\n\r\n    run(config, callback) {\r\n        let data = super.getQueryData(config,this.clientSecret,this.mode);\r\n        debug('In HackerEarth:Run Data sent to API is %s',JSON.stringify(data));\r\n        let rpData=super.getRequestPostJSON(data,this.runURL);\r\n        return super.doOperation(rpData,callback);\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect,useRef } from 'react';\nimport './App.css';\nimport { \n  ThemeProvider,\n  Paper,\n  createMuiTheme,\n  Button,\n  FormControl,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport WhereToVoteTwoToneIcon from '@material-ui/icons/WhereToVote';\nimport BugReportTwoToneIcon from '@material-ui/icons/BugReportTwoTone';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport HackerEarth from './ide'\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport back from './back.jpg'\nimport backl from './backl.jpg'\nimport arial from './fonts/ARIAL.TTF'\nimport cute from './fonts/Randomly Cute.otf'\n\n\n\nfunction App() {\n  // eslint-disable-next-line\n  const [darkMode, setDarkMode] = React.useState(getInitialMode());\n  React.useEffect(() => {\n    localStorage.setItem(\"light\", JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  function getInitialMode() {\n    const isReturningUser = \"light\" in localStorage;\n    const savedMode = JSON.parse(localStorage.getItem(\"light\"));\n    const userPrefersDark = getPrefColorScheme();\n    // if mode was saved --> dark / light\n    if (isReturningUser) {\n      return savedMode;\n      // if preferred color scheme is dark --> dark\n    } else if (userPrefersDark) {\n      return true;\n      // otherwise --> light\n    } else {\n      return false;\n    } \n    // return savedMode || false;\n  }\n\n  function getPrefColorScheme() {\n    if (!window.matchMedia) return;\n\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  }\n  const theme= createMuiTheme({\n    palette:{\n      type: darkMode ? \"dark\" : \"light\"\n      ,\n    },\n  });\n  const [lang, setLang] = useState([\n    {\n      name:\"CPP\",\n      v:1\n    },\n    {\n      name:\"PYTHON\",\n      v:2\n    },\n    {\n      name:\"CSHARP\",\n      v:3\n    },\n    {\n      name:\"JAVA\",\n      v:4\n    },\n    {\n      name:\"JAVASCRIPT\",\n      v:5\n    },\n    {\n      name:\"JAVASCRIPT_NODE\",\n      v:6\n    },\n    {\n      name:\"PHP\",\n      v:7\n    },\n    {\n      name:\"RUBY\",\n      v:8\n    }\n  ],[])\n\n  const [curr, setCurr] = useState(0)\n  const [source,setSource]=useState({\n    value:''\n  })\n  const [output,setOutput]=useState({\n    value:''\n  })\n  const codeRef = React.createRef()\n  const stdinRef = useRef()\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    setOutput({\n      value:\"Compiling and calculating result ...\"\n    })\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.run(config, (err, res) => {\n        if (err) {\n          console.log(`${lang[curr].name}`)\n            console.log(err);\n        }\n        else{\n        //console.log(config.source)\n        //console.log(res)\n        if(JSON.parse(res).compile_status!==\"OK\"){\n          setOutput({\n            value:\"Your code had an error: \"+JSON.parse(res).compile_status\n          })\n        }\n        console.log(JSON.parse(res));\n        setOutput({\n          value:JSON.parse(res).run_status.output\n        })\n      }\n    });\n  \n  \n  };\n  const handleSubmit2 = async(e) => {\n    e.preventDefault();\n    console.log(`${codeRef.current.value}`)\n    const s=`${codeRef.current.value}`\n    //await setSource( `${codeRef.current.value}`)\n    setOutput({\n      value:\"Compiling and checking for errors ...\"\n    })\n    await console.log(s)\n   // await console.log(typeof(sourcecode))\n   const i=`${stdinRef.current.value}`\n     \n     \n      \n      const hackerEarth = new HackerEarth(\n        '89d6d425a2229325e68ae2bbe0c12d49dcd76a63', //client secret key\n        ''\n    );\n    \n    \n    const config = {};\n    \n    config.time_limit = 1;\n    \n    config.memory_limit = 323244;\n    \n    config.source = s; \n    \n    config.input = i;\n\n    config.lang=`${lang[curr].name}`\n\n\n    \n    hackerEarth.compile(config, (err, res) => {\n      if (err) {\n        console.log(`${lang[curr].name}`)\n          console.log(err);\n      }\n      else{\n      //console.log(config.source)\n      //console.log(res)\n      if(JSON.parse(res).compile_status!==\"OK\"){\n        setOutput({\n          value:\"Your code had an error: \"+JSON.parse(res).compile_status\n        })\n      }\n      else{\n        setOutput({\n          value:\"Your code compiled succesfully!!\"\n        })\n      }\n      }\n    });\n  };\n\n  const toClear=(e)=>{\n    e.preventDefault();\n    const s=\"\"\n    codeRef.current.value=s\n  }\n\n  const onLangChange=async(event)=>{\n    const valueIndex= event.target.value\n     setCurr(valueIndex)\n     if(valueIndex===0){\n       codeRef.current.value=`/******************************************************************************\n\n       Online C++ Compiler.\nCode, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\ncout<<\"Hello World\";\n\nreturn 0;\n}`\n\n     }\n     else if(valueIndex===1){\n       codeRef.current.value=`'''\n\n       Online Python Compiler.\nCode, Compile, Run and Debug python program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n'''\n\nprint(\"Hello World\")\n`\n     }\n     else if(valueIndex===2){\n       codeRef.current.value=`/******************************************************************************\n\n       Welcome to Online IDE.\n       Code, Compile, Run and Debug online from anywhere in world.\n       \n       *******************************************************************************/\n       using System;\n       class HelloWorld {\n         static void Main() {\n           Console.WriteLine(\"Hello World\");\n         }\n       }`\n\n     }\n     else if(valueIndex===3){\n       codeRef.current.value=`/******************************************************************************\n\n       Welcome to Online IDE.\n       Code, Compile, Run and Debug online from anywhere in world.\n       \n       *******************************************************************************/\npublic class Main\n  {\n    public static void main(String[] args) {\n      System.out.println(\"Hello World\");\n     }\n  }\n      \n       `\n     }\n  else if(valueIndex===4){\n    codeRef.current.value=`/******************************************************************************\n\n    Online Javascript Interpreter.\nCode, Compile, Run and Debug javascript program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n*******************************************************************************/\n\nprint('Hello World');\n\n   `\n  }\n  else if(valueIndex===5){\n    codeRef.current.value=`/******************************************************************************\n\n    Online NodeJS Interpreter.\nCode, Compile, Run and Debug javascript program online.\nWrite your code in this editor and press \"Run\" button to execute it.\n\n*******************************************************************************/\nconsole.log(\"Hello World\");`\n  }\n  else if(valueIndex===6){\n    codeRef.current.value=`<?php\n    /******************************************************************************\n    \n                                Online PHP Interpreter.\n                    Code, Compile, Run and Debug php program online.\n    Write your code in this editor and press \"Run\" button to execute it.\n    \n    *******************************************************************************/\n    \necho \"Hello World\";\n    `\n  }\n  else{\n    codeRef.current.value=`=begin\n\n    Online Ruby Interpreter.\n    Code, Compile, Run and Debug Ruby script online.\n    Write your code in this editor and press \"Run\" button to execute it.\n\n=end\n\nputs \"Hello World\"\n`\n  }\n  }\n useEffect(()=>{\n  codeRef.current.value=`/******************************************************************************\n\n  Online C++ Compiler.\nCode, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\ncout<<\"Hello World\";\n\nreturn 0;\n}`\n },[])\n\n  return (\n    <ThemeProvider   theme={theme} > \n       <nav className={darkMode? \"dark-mode\":\"light-mode\"}>\n       \n           <h1 className=\"h\" style={{color:darkMode?\"#66FCF1\":\"#51E2F5\"}}>ONLINE IDE:</h1>\n        \n      <div className=\"toggle-containerr\">\n    \n          <span style={{ color: darkMode ? \"#52606D\" : \"white\" }}>☀︎</span>\n          <span className=\"togglee\">\n            <input\n              checked={darkMode}\n              onChange={() => {setDarkMode(prevMode => !prevMode) }}\n              id=\"checkbox\"\n              className=\"checkbox\"\n              type=\"checkbox\"\n            />\n            <label htmlFor=\"checkbox\" />\n          </span>\n          <span style={{ color: darkMode ? \"white\" : \"#282a36\" }}>☾</span>\n        </div>\n        </nav>\n     <Paper  className= \"app__paper\" style={{height:\"100%\", backgroundColor:darkMode? \"#212121\" : \"gainsboro\",backgroundImage:darkMode?`url(${back})`:`url(${backl})`,transitionDelay:\"0.5s\", backgroundSize:darkMode?\"\":\"cover\" }}>\n    <div className=\"App\" >\n    <div className=\"App__left\">\n      <div className=\"App__header\">\n      <h1 className=\"g\" style={{color:darkMode?\"#FFA8B6\":\"white\", backgroundColor:darkMode?\"black\":\"black\"}}>SELECT LANGUAGE: </h1>\n    <FormControl className=\"App__dropdown\">\n      <Select\n      className=\"App__select\"\n      variant=\"outlined\"\n      value={curr}\n      style={{backgroundColor:darkMode? \"\": \"\", color:darkMode? \"#FFA8B6\":\"white\"}}\n      onChange={onLangChange}\n      >\n        <MenuItem style={{}} value={0}>{lang[0].name}</MenuItem>\n        <MenuItem style={{}} value={1}> {lang[1].name}</MenuItem>\n        <MenuItem style={{}} value={2}> {lang[2].name}</MenuItem>\n        <MenuItem style={{}} value={3}> {lang[3].name}</MenuItem>\n        <MenuItem style={{}} value={4}> {lang[4].name}</MenuItem>\n        <MenuItem style={{}} value={5}> {lang[5].name}</MenuItem>\n        <MenuItem style={{}} value={6}> {lang[6].name}</MenuItem>\n        <MenuItem style={{}} value={7}> {lang[7].name}</MenuItem>\n        \n\n      </Select>\n  </FormControl>\n      </div>\n      <h3 style={{color:darkMode?\"#C5C6C7\":\"\"}}>Code Editor: </h3>\n  <textarea type=\"text\" ref={codeRef} className=\"App__code\" style={{color:darkMode ? \"\":\"#9DF9EF\",backgroundColor:darkMode?\"#d8d8d8\":\"#282a36\",border:\"\"}}></textarea>\n  \n  <div className=\"App__buttons\">\n    <Button variant={darkMode?\"contained\":\"contained\"} size=\"large\" color={darkMode?\"primary\":\"primary\"} startIcon={<WhereToVoteTwoToneIcon style={{color:darkMode?\"black\":\"\"}}/>}  style={{\"margin-right\": \"10px\",backgroundColor:darkMode?\"#66FCF1\":\"\"}} onClick={handleSubmit}><span style={{fontFamily:`${arial}`,color:darkMode?\"black\":\"#EDF7F6\"}}>Run</span></Button>\n    <Button variant=\"contained\" disableFocusRipple=\"false\" size=\"large\" startIcon={<BugReportTwoToneIcon style={{color:darkMode?\"black\":\"\"}} />} color=\"secondary\" style={{\"margin-right\": \"10px\",backgroundColor:darkMode?\"#FFA8B6\":\"\"}} onClick={handleSubmit2}><span style={{fontFamily:`${arial}`,color:darkMode?\"black\":\"#EDF7F6\"}}>Compile</span></Button>\n    <Button variant=\"contained\" size=\"large\" startIcon={<DeleteForeverTwoToneIcon style={{color:darkMode?\"black\":\"\"}}/>} style={{backgroundColor:darkMode?\"#66FCF1\":\"\"}} color=\"primary\" onClick={toClear}><span style={{fontFamily:`${arial}`,color:darkMode?\"black\":\"#EDF7F6\"}}>Clear</span></Button>\n    </div>\n    </div>\n    <div className=\"App__right\">\n      <h3 className=\"App__smallH\" style={{color:darkMode?\"#C5C6C7\":\"\"}}>Input(Stdin): </h3>\n    <textarea type=\"text\" ref={stdinRef} className=\"App__input\" style={{color:darkMode ? \"\":\"#9DF9EF\",backgroundColor:darkMode?\"#d8d8d8\":\"#282a36\",border:\" \"}} />\n    <h3 className=\"App__smallH\" style={{color:darkMode?\"#C5C6C7\":\"\"}}>Output(Stdout): </h3>\n    <textarea disabled value={output.value} className=\"App__output\" style={{color:darkMode ? \"\":\"#9DF9EF\",backgroundColor:darkMode?\"#d8d8d8\":\"#282a36\",border:\"\"}} ></textarea>\n    </div>\n   \n  </div>\n  </Paper>\n  </ThemeProvider>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ARIAL.fa3228aa.TTF\";"],"sourceRoot":""}